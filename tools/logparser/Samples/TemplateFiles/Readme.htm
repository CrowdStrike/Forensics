<HTML>

<HEAD><TITLE>Log Parser sample template files</TITLE></HEAD>

<BODY BGCOLOR="#EFEFFF" LINK="#000000" VLINK="#606060" ALINK="#303030">




<P>
<FONT SIZE="4"><B><A HREF="WCat.tpl">WCat.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates a WCat load script with the top 10 URL found in the IIS log files (generated by the <A HREF="WCat.sql">WCat.sql</A> query file):<BR>
</FONT>

<TT><PRE>
&lt;LPHEADER&gt;[Configuration]
NumClientMachines:    1        # number of distinct client machines to use
NumClientThreads:     100     # number of threads per machine
AsynchronousWait:     TRUE     # asynchronous wait for think and delay
Duration:             5m      # length of experiment (m = minutes, s = seconds)
MaxRecvBuffer:        8192K      # suggested maximum received buffer
ThinkTime:            0s       # maximum think-time before next request
WarmupTime:           5s      # time to warm up before taking statistics
CooldownTime:         6s      # time to cool down at the end of the experiment

[Performance]

[Script]
SET RequestHeader = "Accept: */*\r\n"
APP RequestHeader = "Accept-Language: en-us\r\n"
APP RequestHeader = "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705)\r\n"
APP RequestHeader = "Host: %HOST%\r\n"

&lt;/LPHEADER&gt;
&lt;LPBODY&gt;
NEW TRANSACTION
	classId = %UID%
	NEW REQUEST HTTP
	ResponseStatusCode = %STATUS%
	Weight = %TOTAL%
	verb = "%VERB%"
        URL = "%URI%"
	

&lt;/LPBODY&gt;
&lt;LPFOOTER&gt;

&lt;/LPFOOTER&gt;
</PRE></TT>

To run this example, type the following command:
<TT><PRE>
LogParser file:WCat.sql -o:TPL -tpl:WCat.tpl
</TT></PRE>
</P>

After the <I>StressFile.ubr</I> file has been created, you can run WCat with the following commands:
<TT><PRE>
start wcctrl.exe -a myserver -z StressFile.ubr 
start wcclient.exe 127.0.0.1
</TT></PRE>
</P>



<P><BR></P>

<P>
<FONT SIZE="4"><B><A HREF="Tinyget.tpl">Tinyget.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates a Tinyget script file with the top 10 URL found in the IIS log files (generated by the <A HREF="Tinyget.sql">Tinyget.sql</A> query file):<BR>
</FONT>

<TT><PRE>
&lt;LPBODY&gt;-srv:%HOST% -uri:%URI% -status:%STATUS% -verb:%VERB%
&lt;/LPBODY&gt;
</PRE></TT>

To run this example, type the following command:
<TT><PRE>
LogParser file:Tinyget.sql -o:TPL -tpl:Tinyget.tpl
</TT></PRE>
</P>

After the <I>Urls.txt</I> file has been created, you can run Tinyget with the following command:
<TT><PRE>
tinyget.exe -z Urls.txt
</TT></PRE>
</P>


<P><BR></P>

<P>
<FONT SIZE="4"><B><A HREF="ASPErrors.tpl">ASPErrors.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates a text report with information about ASP 500 errors (generated by the <A HREF="ASPErrors.sql">ASPErrors.sql</A> query file):<BR>
</FONT>

<TT><PRE>
&lt;LPBODY&gt;The URL %Uri% had the error:"%ErrorMsg%" on line %LineNo%, %Total% time(s)
&lt;/LPBODY&gt;
</PRE></TT>

To run this example, type the following command:
<TT><PRE>
LogParser file:ASPErrors.sql -o:TPL -tpl:ASPErrors.tpl
</TT></PRE>
</P>


<P><BR></P>


<P>
<FONT SIZE="4"><B><A HREF="StatusCodes.tpl">StatusCodes.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates an HTML document containing a summary information about all the HTTP Status codes in the supplied log files
(generated by the <A HREF="StatusCodes.sql">StatusCodes.sql</A> query file):<BR>
</FONT>

<TT><PRE>
&lt;LPHEADER&gt;
&lt;HTML&gt;

&lt;HEAD&gt;&lt;TITLE&gt;Summary of HTTP Status Codes&lt;/TITLE&gt;&lt;/HEAD&gt;

&lt;BODY BGCOLOR="#EFEFFF"&gt;

&lt;TABLE BORDER="1" CELLPADDING="2" CELLSPACING="2"&gt;
&lt;TR&gt;
 &lt;TH COLSPAN="2" ALIGN="CENTER"&gt;HTTP Status Summary&lt;/TH&gt;
&lt;/TR&gt;
&lt;TR&gt;
 &lt;TH&gt;HTTP Status Code&lt;/TH&gt;
 &lt;TH&gt;Hit Count&lt;/TH&gt;
&lt;/TR&gt;

&lt;/LPHEADER&gt;


&lt;LPBODY&gt;
&lt;TR&gt;
 &lt;TD&gt;%Status%&lt;/TD&gt;
 &lt;TD&gt;%Total%&lt;/TD&gt;
&lt;/TR&gt;
&lt;/LPBODY&gt;

&lt;LPFOOTER&gt;
&lt;/TABLE&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
&lt;/LPFOOTER&gt;

</PRE></TT>

To run this example, type the following command:
<TT><PRE>
LogParser file:StatusCodes.sql -o:TPL -tpl:StatusCodes.tpl
</TT></PRE>
To view the result, open the output file &quot;<A HREF="StatusCodes.html">StatusCodes.html</A>&quot; in the Browser.
</P>


<P><BR></P>

<P>
<FONT SIZE="4"><B><A HREF="ReferBrokenLinks.tpl">ReferBrokenLinks.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates an HTML document containing all the pages that are currently referencing non-existing Url's in the supplied log files
(generated by the <A HREF="ReferBrokenLinks.sql">ReferBrokenLinks.sql</A> query file):<BR>
</FONT>

<TT><PRE>

&lt;LPHEADER&gt;
&lt;HTML&gt;

&lt;HEAD&gt;&lt;TITLE&gt;Pages having broken links to this site&lt;/TITLE&gt;&lt;/HEAD&gt;

&lt;BODY BGCOLOR="#EFEFFF"&gt;

&lt;TABLE BORDER="1" CELLPADDING="2" CELLSPACING="2"&gt;
&lt;TR&gt;
 &lt;TH COLSPAN="2" ALIGN="CENTER"&gt;Pages having broken links to this site&lt;/TH&gt;
&lt;/TR&gt;
&lt;TR&gt;
 &lt;TH&gt;Page with broken link&lt;/TH&gt;
 &lt;TH&gt;Broken link&lt;/TH&gt;
&lt;/TR&gt;

&lt;/LPHEADER&gt;


&lt;LPBODY&gt;
&lt;TR&gt;
 &lt;TD&gt;&lt;A HREF="%Referer%"&gt;%Referer%&lt;/A&gt;&lt;/TD&gt;
 &lt;TD&gt;%Url%&lt;/TD&gt;
&lt;/TR&gt;
&lt;/LPBODY&gt;

&lt;LPFOOTER&gt;
&lt;/TABLE&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
&lt;/LPFOOTER&gt;


</PRE></TT>

To run this example, type the following command:
<TT><PRE>
LogParser file:ReferBrokenLinks.sql -o:TPL -tpl:ReferBrokenLinks.tpl
</TT></PRE>
To view the result, open the output file &quot;<A HREF="ReferBrokenLinks.html">ReferBrokenLinks.html</A>&quot; in the Browser.
</P>





<P><BR></P>

<P>
<FONT SIZE="4"><B><A HREF="EventLogs.tpl">EventLogs.tpl</A></B></FONT><BR><BR>
<FONT SIZE="3">
This template file creates an HTML page with information from the last 100 events in the specified event log.
</FONT>

<P><BR/></P>

To run this example, type the following command:
<TT><PRE>
LogParser file:EventLogs.sql?EventLog=System -o:TPL -tpl:EventLogs.tpl
</TT></PRE>
</P>

</BODY>
</HTML>